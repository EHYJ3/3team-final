<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.javalab.board.repository.LoginMapper">

	<!-- 개인회원 로그인 정보 조회 -->
	<select id="loginJobSeeker" parameterType="String" resultType="com.javalab.board.vo.JobSeekerVo">
		SELECT
		jobSeeker_id AS jobSeekerId,
		password,
		name,
		birth,
		tel,
		email,
		address
		FROM jobSeeker
		WHERE jobSeeker_id = #{jobSeekerId}
	</select>

	<!-- 기업회원 로그인 정보 조회 -->
	<select id="loginCompany" parameterType="String" resultType="com.javalab.board.vo.CompanyVo">
		SELECT
		comp_id AS compId,
		password,
		email,
		company_name AS companyName,
		business_number AS businessNumber,
		homepage,
		logo_name AS logoName,
		logo_path AS logoPath,
		address,
		status
		FROM company
		WHERE comp_id = #{compId}
	</select>

	<!-- 개인회원 저장 -->
	<insert id="saveJobSeeker" parameterType="com.javalab.board.vo.JobPostVo">
		INSERT INTO jobSeeker (
		jobSeeker_id,
		password,
		name,
		birth,
		tel,
		email,
		address,
		file_name,
		file_path
		) VALUES (
		#{jobSeekerId},
		#{password},
		#{name},
		#{birth, jdbcType=DATE},
		#{tel},
		#{email},
		#{address},
		#{fileName},
		#{filePath}
		)
	</insert>

	<!-- 기업회원 저장 -->
	<insert id="saveCompany">
		INSERT INTO company (
		comp_id,
		password,
		email,
		company_name,
		business_number,
		homepage,
		logo_name,
		logo_path,
		address,
		status
		) VALUES (
		#{compId},
		#{password},
		#{email},
		#{companyName},
		#{businessNumber},
		#{homepage},
		#{logoName},
		#{logoPath},
		#{address},
		#{status}
		)
	</insert>

	<!-- 사용자 권한 저장 -->
	<insert id="saveRole">
		INSERT INTO UserRoles (user_id, user_type, role_id)
		VALUES (#{userId}, (CASE
		WHEN (SELECT comp_id FROM company WHERE comp_id = #{userId}) IS NOT NULL THEN 'company'
		WHEN (SELECT jobSeeker_id FROM jobSeeker WHERE jobSeeker_id = #{userId}) IS NOT NULL THEN 'jobSeeker'
		ELSE 'unknown'
		END), (SELECT role_id FROM role WHERE role_name = #{roleName}))
	</insert>

	<!-- 사용자 권한 삭제 -->
	<delete id="deleteRole">
		DELETE FROM UserRoles
		WHERE user_id = #{userId} AND role_id = (SELECT role_id FROM role WHERE role_name = #{roleName})
	</delete>
	<!-- 사용자 권한 조회 -->
	<select id="getRolesByUserId" parameterType="String" resultType="java.lang.String">
		SELECT r.role_name
		FROM UserRoles ur
		JOIN Role r ON ur.role_id = r.role_id
		WHERE ur.user_id = #{userId}
	</select>

</mapper>